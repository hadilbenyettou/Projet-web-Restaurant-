const express = require('express');
const MenuItem = require('../models/MenuItem');
const router = express.Router();
const upload = require('../middleware/upload'); // Import the upload middleware

// Get all menu items
router.get('/menu-items', async (req, res) => {
  try {
    const menuItems = await MenuItem.find();
    res.json(menuItems); // Return all menu items including the image URL
  } catch (error) {
    console.error(error);
    res.status(500).send('Server error');
  }
});

// Add a new menu item with image upload or URL
router.post('/menu-items', upload.single('image'), async (req, res) => {
  try {
    // Extract form data
    const { name, price, description, category, imageUrl } = req.body;

    let finalImageUrl = '';

    // Check if an image was uploaded
    if (req.file) {
      // If an image is uploaded, use the image URL generated by Multer
      finalImageUrl = `/images/${req.file.filename}`;
    } else if (imageUrl) {
      // If no image is uploaded, use the provided URL from the form
      finalImageUrl = imageUrl;
    } else {
      return res.status(400).send('No image URL or file uploaded');
    }

    // Create the new menu item
    const newMenuItem = new MenuItem({
      name,
      price,
      description,
      category,
      imageUrl: finalImageUrl, // Save the image URL or the uploaded file's URL
    });

    await newMenuItem.save();
    res.status(201).json(newMenuItem); // Return the newly created menu item
  } catch (error) {
    console.error(error);
    res.status(400).send('Error adding menu item');
  }
});
router.delete('/menu-items/:id', async (req, res) => {
  try {
    const menuItem = await MenuItem.findById(req.params.id);
    if (!menuItem) {
      return res.status(404).json({ message: 'Menu item not found' });
    }

    await menuItem.deleteOne();
    res.status(200).json({ message: 'Menu item deleted successfully' });
  } catch (error) {
    console.error('Error deleting menu item:', error);
    res.status(500).json({ message: 'Server error', error: error.message });
  }
});
module.exports = router;
